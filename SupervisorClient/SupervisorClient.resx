<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBgQCBwYESAcGBJ0HBgTYBwYE+wcGBP8HBgT7BwYE2AcG
        BJ0HBgRIBwYEAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcG
        BEcHBgTWBwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE1gcGBEcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBgQDBwYEjwcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcG
        BP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgSPBwYEAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcG
        BAEHBgSlBwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcG
        BP8HBgT/BwYEpQcGBAEAAAAAAAAAAAAAAAAAAAAAAAAAAAcGBIQHBgT/BwYE/wcGBP8HBgT/BwYE/wcG
        BP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBIQAAAAAAAAAAAAA
        AAAAAAAABwYENwcGBP0HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/KCcl/1pZWP9JSEf/BwYE/wcG
        BP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP0HBgQ3AAAAAAAAAAAAAAAABwYEwQcGBP8HBgT/BwYE/wcG
        BP8HBgT/BwYE/xgXFf+cm5v/////////////////3t7e/zk4Nv8HBgT/BwYE/wcGBP8HBgT/BwYE/wcG
        BP8HBgTBAAAAAAAAAAAHBgQxBwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/5ybm///////nJub/1pZ
        WP9qamj/7u7u/+7u7v8oJyX/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYEMQAAAAAHBgSHBwYE/wcG
        BP8HBgT/BwYE/wcGBP8HBgT/OTg2///////Nzc3/BwYE/wcGBP8HBgT/ampo//////+srKv/BwYE/wcG
        BP8HBgT/BwYE/wcGBP8HBgT/BwYEhwAAAAAHBgTGBwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/WllY////
        //+Li4r/BwYE/wcGBP8HBgT/GBcV///////e3t7/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYExgAA
        AAAHBgTvBwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/e3p5//////9qamj/BwYE/wcGBP8HBgT/BwYE/83N
        zf//////GBcV/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE7wAAAAAHBgT/BwYE/wcGBP8HBgT/BwYE/wcG
        BP8HBgT/i4uK//////+Li4r/BwYE/wcGBP8HBgT/BwYE/97e3v//////GBcV/wcGBP8HBgT/BwYE/wcG
        BP8HBgT/BwYE/wAAAAAHBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/i4uK//////+9vbz/BwYE/wcG
        BP8HBgT/KCcl///////Nzc3/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYElwAAAAAHBgTvBwYE/wcG
        BP8HBgT/BwYE/wcGBP8HBgT/i4uK////////////SUhH/wcGBP8HBgT/i4uK//////+Li4r/BwYE/wcG
        BP8HBgT/BwYE/wcGBP8HBgSfBwYEAQAAAAAHBgTGBwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/i4uK////
        //+cm5v//////83Nzf/Nzc3//////83Nzf8YFxX/BwYE/wcGBP8HBgT/BwYE/wcGBKUHBgQDAAAAAAAA
        AAAHBgSHBwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/i4uK//////9aWVj/ampo/83Nzf/Nzc3/nJub/xgX
        Ff8HBgT/BwYE/wcGBP8HBgT/BwYEsgcGBAYAAAAAAAAAAAAAAAAHBgQxBwYE/wcGBP8HBgT/BwYE/wcG
        BP8HBgT/i4uK//////9aWVj/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgS6BwYEBgAA
        AAAAAAAAAAAAAAAAAAAAAAAABwYEwQcGBP8HBgT/BwYE/wcGBP8HBgT/i4uK//////9aWVj/BwYE/wcG
        BP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBL4HBgQKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYENwcG
        BP0HBgT/BwYE/wcGBP8HBgT/i4uK//////9aWVj/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYEyQcG
        BA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGBIQHBgT/BwYE/wcGBP8HBgT/e3p5/83N
        zf9JSEf/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgTRBwYEDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAcGBAEHBgSlBwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcG
        BNMHBgQVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBgQDBwYEjwcG
        BP8HBgT/BwYE/wcGBP8HBgT/BwYE/wcGBP8HBgT/BwYE3AcGBBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGBEcHBgTWBwYE/wcGBP8HBgT/BwYE/wcG
        BP8HBgTkBwYEHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAHBgQCBwYESAcGBJ0HBgTYBwYE+wcGBOQHBgQkAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AH9Q+AA/ReAAD1LAAAdWwAAHNoAAA0+AAANTAAABUgAA
        AVMAAAE9AAABNwAAAW8AAAFtAAABYQAAA1wAAAdnAAAPRIAAHwCAAD9nwAB/RsAA/3PgAf9c+AP/Z/wH
        /yA=
</value>
  </data>
</root>